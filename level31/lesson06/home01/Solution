package com.javarush.test.level31.lesson06.home01;

import java.io.*;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;
import java.util.zip.ZipOutputStream;

/* Добавление файла в архив
В метод main приходит список аргументов.
Первый аргумент - полный путь к файлу fileName.
Второй аргумент - путь к zip-архиву.
Добавить файл (fileName) внутрь архива в директорию 'new'.
Если в архиве есть файл с таким именем, то заменить его.

Пример входных данных:
C:/result.mp3
C:/pathToTest/test.zip

Файлы внутри test.zip:
a.txt
b.txt

После запуска Solution.main архив test.zip должен иметь такое содержимое:
new/result.mp3
a.txt
b.txt

Подсказка: нужно сначала куда-то сохранить содержимое всех энтри,
а потом записать в архив все энтри вместе с добавленным файлом.
Пользоваться файловой системой нельзя.
*/
public class Solution {
    public static void main(String[] args) throws IOException {
        File inputFile = Paths.get(args[0]).toFile();
        File zipFile = Paths.get(args[1]).toFile();
        File tempFile = Files.createTempFile(zipFile.getName(),null).toFile();
        tempFile.delete();

        zipFile.renameTo(tempFile);
        byte[] buf = new byte[1024 * 4];

        ZipInputStream zin = new ZipInputStream(new FileInputStream(tempFile));
        ZipOutputStream out = new ZipOutputStream(new FileOutputStream(zipFile));

        ZipEntry entry = zin.getNextEntry();
        while (entry != null) {
            String name = entry.getName();
            if (name.equals("new" + File.separator + inputFile.getName())){
                // Add ZIP entry to output stream.
                out.putNextEntry(new ZipEntry(name));
                // Transfer bytes from the ZIP file to the output file
                int len;
                while ((len = zin.read(buf)) > 0)
                {
                    out.write(buf, 0, len);
                }
            }
            else
            {



            }
            entry = zin.getNextEntry();

        }
        // Close the streams
        zin.close();
        // Compress the files

        InputStream in = new FileInputStream(inputFile);
        // Add ZIP entry to output stream.

        out.putNextEntry(new ZipEntry("new" + File.separator + inputFile.getName()));
        // Transfer bytes from the file to the ZIP file
        int len;
        while ((len = in.read(buf)) > 0) {
            out.write(buf, 0, len);
        }
        // Complete the entry
        out.closeEntry();
        in.close();

        // Complete the ZIP file
        out.close();
        tempFile.delete();

        /*
        Здесь находится решение, которое принимается, но приниматься не должно!
        Здесь вот такое отличие:
        "если нет файла в архиве, то не нужно создавать папку new и добавлять этот файл вообще. почему-то так"
        Это метод main
        
        
        
                File inputFile = Paths.get(args[0]).toFile();
        File zipFile = Paths.get(args[1]).toFile();
        File tempFile = Files.createTempFile(zipFile.getName(),null).toFile();
        byte[] buf = new byte[1024 * 4];

        ZipInputStream zin = new ZipInputStream(new FileInputStream(zipFile));
        ZipOutputStream out = new ZipOutputStream(new FileOutputStream(tempFile));

        ZipEntry entry = zin.getNextEntry();
        boolean isFileExists = false;
        while (entry != null) {
            String name = entry.getName();
            if (name.equals("new/" + inputFile.getName())){
                isFileExists = true;
            }
            else
            {
                // Add ZIP entry to output stream.
                out.putNextEntry(new ZipEntry(name));
                // Transfer bytes from the ZIP file to the output file
                int len;
                while ((len = zin.read(buf)) > 0)
                {
                    out.write(buf, 0, len);
                }
            }
            entry = zin.getNextEntry();

        }
        // Close the streams
        zin.close();
        // Compress the files

        if (isFileExists)
        {
            InputStream in = new FileInputStream(inputFile);
            // Add ZIP entry to output stream.

            out.putNextEntry(new ZipEntry("new" + File.separator + inputFile.getName()));
            // Transfer bytes from the file to the ZIP file
            int len;
            while ((len = in.read(buf)) > 0)
            {
                out.write(buf, 0, len);
            }
            // Complete the entry
            in.close();
            out.closeEntry();
        }
        // Complete the ZIP file
        out.close();
        //tempFile.delete();
        zipFile.delete();
        tempFile.renameTo(zipFile);
        
        */
    }
}
