package com.javarush.test.level26.lesson02.task03;

import java.util.Comparator;

/* Убежденному убеждать других не трудно.
В таблице есть колонки, по которым можно сортировать.
Пользователь имеет возможность настроить под себя список колонок, которые будут сортироваться.
Напишите public static компаратор CustomizedComparator, который будет:
1. в конструкторе принимать список компараторов
2. сортировать данные в порядке, соответствующем последовательности компараторов.
Все переданные компараторы сортируют дженерик тип Т
В конструктор передается как минимум один компаратор
*/
public class Solution {

    public static class CustomizedComparator<T>
            implements Comparator<T>{
        Comparator<T> [] comparators;
        public CustomizedComparator(Comparator<T>... comparators){
            if (comparators == null){
                throw new NullPointerException();
            }
            else if (comparators.length == 0){
                throw new IllegalArgumentException();
            }
            this.comparators = comparators;
        }

        @Override
        public int compare(T o1, T o2)
        {
            int g = 0;
            for (int i = 0; i < comparators.length; i++)
            {
                if (g == 0)
                {
                    g = comparators[i].compare((T) o1, (T) o2);
                }
                else break;
            }
            return g;
        }
    }
}
