package com.javarush.test.level26.lesson02.task01;

import java.util.Arrays;

/* Почитать в инете про медиану выборки
Реализовать логику метода sort, который должен сортировать данные в массиве по удаленности от его медианы
Вернуть отсортированный массив от минимального расстояния до максимального
Если удаленность одинаковая у нескольких чисел, то выводить их в порядке возрастания
*/
public class Solution {

    public static void main(String[] args)
    {
        Integer[] array = new Integer[8];
        array[0] = 1;
        array[1] = 8;
        array[2] = 3;
        array[3] = 4;
        array[4] = 5;/// center
        array[5] = 4;
        array[6] = 4;
        array[7] = 5;

        sort(array);
        for (int gg : array){
            System.out.println(gg);
        }
    }

    public static Integer[] sort(Integer[] array) {
        //implement logic here
        double median;
        Arrays.sort(array);
        if (array.length %2 == 0) {
            median = ((double)(array[array.length/2] + array[array.length/2 - 1]))/2;
        }
        else {
            median = array[array.length/2];
        }
        for (int j = 0; j < array.length-1; j++)
        {
            for (int i = 0; i < array.length - 1; i++)
            {
                if (Math.abs(median - array[i]) > Math.abs(median - array[i+1]))
                {
                    Integer i1 = array[i];
                    array[i] = array[i + 1];
                    array[i + 1] = i1;
                } else if (Math.abs(median - (double)array[i]) == Math.abs(median - (double)array[i+1]))
                {
                    if (array[i] > array[i + 1])
                    {
                        Integer i1 = array[i];
                        array[i] = array[i + 1];
                        array[i + 1] = i1;
                    }
                }
            }
        }
        return array;
    }
}
